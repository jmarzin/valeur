%p#notice= notice

%h2 Saisie/modification des impacts sur les coûts de fonctionnement de l'étude  #{@etude._id} du projet #{@etude.projet.nom}
= form_for @fonction, :url => fonction_path(@etude) do |fonction_form|
  - if @fonction.errors.any?
    #error_explanation
      %h2= "#{pluralize(@fonction.errors.count, "erreur")}"
      -@fonction.situations.each do |situation|
        -if situation.errors.any?
          %ul
            -situation.errors.full_messages.each do |msg|
              %li= msg
  %header
    = fonction_form.submit 'Actualiser'
    \
    = fonction_form.submit 'Enregistrer'
  %br
  %br
  -@fonction.situations.each do |situation|
    = fonction_form.fields_for :situations,situation do |situation_form|
      %article{:id => [situation.titre]}
        %h3#situation Impacts sur les coûts de fonctionnement dans la situation #{situation.titre}
        = situation_form.hidden_field :somme_pourcent
        %table#cadre_com
          %th#repart
            %article#cadre
            %table#cadre
              %tr
                %th.categorie Catégorie de personnel
                %th.repart Répartition (%)
              -situation.repartitions.each do |repart|
                = situation_form.fields_for :repartitions,repart do |repart_form|
                  %tr{:id => [repart.cadre]}
                    %td.categorie=repart.cadre
                    %td.repart= repart_form.number_field :pourcent, :size => 1
          %th#commentaire
            %article#commentaire
              = situation_form.label :commentaires, :class => "commentaire"
              = situation_form.text_area :commentaires, :cols => 80, :rows => 6
      %br
      %br
      %article#detail
        %table#detail
          %tr
            %th{:colspan => 3} Actions
            %th.description Description du coût
            %th.nature Nature
            %th.unite Exprimé en
            %th.totaux --Totaux-- 
            - @etude.liste_annees.each do |annee|
              %th=annee
          -i=1
          -situation.details.each do |detail|
            = situation_form.fields_for :details,detail do |detail_form|
              %tr{:id => [i]}
                %td= situation_form.submit 'Sup', :class => 'action', :name => "s#{situation.titre}#{i}"
                %td= situation_form.submit 'Ins^', :class => 'action', :name => "h#{situation.titre}#{i}"
                %td= situation_form.submit 'Insv', :class => 'action', :name => "b#{situation.titre}#{i}"
                %td.description= detail_form.text_field :description,:size => 20
                %td.nature= detail_form.select :nature,Etude.liste_natures_fonctions.keys,:size => 10
                %td.unite=detail.unite
                %td.totaux.montant= number_with_precision(detail.total, options =  {delimiter: " ", precision: 0}) unless detail.total == 0
                -detail.montants.each do |montant|
                  = detail_form.fields_for :montants,montant do |montant_form|
                    %td.montant= montant_form.number_field :montant,:value => number_with_precision(montant.montant,options={precision: 0}), :size => 1
              -i += 1
          -situation.calculees.each do |calc|
            %tr.totaux
              %td.touche
              %td.touche
              %td.touche
              %td.description{:colspan => 2}= calc.description
              -if calc.description =~ /personnel/ then prec = 1 else prec = 0 end
              %td.unite= calc.unite
              %td.montant=number_with_precision(calc.total, options =  {delimiter: " ", precision: 0}) unless calc.total == nil || calc.total == 0
              -calc.montants.each do |montant|
                %td.montant= number_with_precision(montant.montant, options =  {delimiter: " ", precision: prec}) unless montant.montant == 0
          -if situation.titre == 'cible'
            %tr
            %tr
            -@fonction.calculees.each do |calc|
              %tr.totaux
                %td.touche
                %td.touche
                %td.touche
                %td.description{:colspan => 2}= calc.description
                -if calc.description =~ /personnel/ then prec = 1 else prec = 0 end
                %td.unite= calc.unite
                %td.montant=number_with_precision(calc.total, options =  {delimiter: " ", precision: 0}) unless calc.total == nil || calc.total == 0
                -calc.montants.each do |montant|
                  %td.montant= number_with_precision(montant.montant, options =  {delimiter: " ", precision: prec}) unless montant.montant == 0
  %br
  %br
  %footer
    = fonction_form.submit 'Actualiser'
    \
    = fonction_form.submit 'Enregistrer'
